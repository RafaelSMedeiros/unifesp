# -*- coding: utf-8 -*-
"""Modelo SIR - GitHub.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jzr9wDaXSOc0QaX4Rfo5ErJJVr4PpsmP

# Modelo SIR
**Autores:**

[Lucas Henrique Amorim da Silva]()<br>
[Lucas Praxedes Fischer de Mattos]()<br>
[Rafael da Silva Medeiros](https://github.com/RafaelSMedeiros)<br>

**Data de Criação:** 15/07/2022<br>
**Ultima Modificação:** 10/02/2023<br>
**Descrição:** Projeto utilizado como avalição da unidade curricular (UC) Modelagem Computacional ministrada pelo Prof. Dr. Marcos Gonçalves Quiles na Universidade Federal de São Paulo.

## Descrição Geral do Sistema Simulado

Neste relatório será realizada a simulação do modelo SIR para diversos tipos de cenários. O objetivo é analisar o comportamento de doenças em cada situação, e verificar se há um achatamento da curva quando existem desordens no ciclo natural da doença.

## Parâmetros da Simulação

- $TMax$ = $365$ - Tempo máximo de simulação em dias
"""

# Bibliotecas
import numpy as np
from matplotlib import pyplot as plt
import random
import networkx as nx

"""## Simulação 01 - Analisando a propagação inicial da doença

### Parâmetros
"""

# Váriaveis de controle
DT = 0.01           # Variação do tempo
t = 0               # Tempo inicial
TMax = 365          # Tempo máximo para simulação (365 Dias)
N = 500             # População total

# Infecção
S = 500             # Poulação Sucetivel
I = 1               # Poupulação Infectada
R = 0               # População Recuperada
r = 0.0004          # Taxa de infecção
a = 0.015           # Taxa de recuperação
infec = 0           # Quantidade máxima de infectados

# Listas para plot
sl = [S]            # Lista Sucetiveis
il = [I]            # Lista Infectados
rl = [R]            # Lista Recuperados
tl = [t]            # Lista Tempo

"""###Cálculos"""

for i in np.arange(DT,TMax,DT):
  DS = (-r*S*I) * DT
  DI = (r*S*I - a*I) * DT
  DR = (a*I) * DT

  S += DS
  I += DI
  R += DR

  if (infec<I):
    infec = I

  sl.append(S)
  il.append(I)
  rl.append(R)

  tl.append(t)
  t += DT

"""###Gráficos"""

plt.xlabel("Tempo (dias)")
plt.ylabel("População")
plt.plot
plt.plot(tl,il, label = "Infectados", color = "red")
plt.plot(tl,sl, label = "Sucetiveis", color = "blue")
plt.plot(tl, rl, label = "Recuperados", color = "green")
plt.legend(loc="best")
plt.show()
print("Máximo de Infectados:", round(infec))

"""Nesta equação base, não há nenhuma pertubação na força ou influência da doença, feita somente para demonstrar como seria o ciclo normal da doença. E como é possível ver, os suscetíveis são rapidamente infectados pela doença e estes atingem o auge da curva bem cedo, além de demorarem para se curarem por completo.

## Simulação 02 - Analisando a propagação de uma doença não epidémica

### Parâmetros
"""

# Váriaveis de controle
DT = 0.01           # Variação do tempo
t = 0               # Tempo inicial
TMax = 365          # Tempo máximo para simulação (365 Dias)
N = 500             # População total

# Infecção
S = 500             # População Sucetiveis
I = 10              # População Infectada
R = 0               # População Recuperada
r = 0.00005         # Taxa de infecção
a = 0.028           # Taxa de recuperação
infec = 0           # Quantidade máxima de infectados

# Listas para plot
sl = [S]            # Lista Sucetiveis
il = [I]            # Lista Infectados
rl = [R]            # Lista Recuperados
tl = [t]            # Lista Tempo

"""### Cálculos"""

for i in np.arange(DT,TMax,DT):
  DS = (-r*S*I) * DT
  DI = (r*S*I - a*I) * DT
  DR = (a*I) * DT

  S += DS
  I += DI
  R += DR
  
  if (infec < I):
    infec = I

  sl.append(S)
  il.append(I)
  rl.append(R)

  tl.append(t)
  t += DT

"""###Gráficos

"""

plt.xlabel("Tempo (dias)")
plt.ylabel("População")
plt.plot
plt.plot(tl,il, label = "Infectados", color = "red")
plt.plot(tl,sl, label = "Sucetiveis", color = "blue")
plt.plot(tl, rl, label = "Recuperados", color = "green")
plt.legend(loc="best")
plt.show()
print("Máximo de Infectados:", round(infec))

"""Diferentemente da simulação base, nesta não há uma epidemia de fato, pois a força da doença é muito baixa, assim, os infectados se recuperam antes mesmo de dispersar a doença. E como é possível ver pela equação: se a pop. de suscetíveis é menor que a razão de recuperação por infecção, tem-se que os infectados diminuem continuamente, desde o início neste caso. 
#### Se S < a/r, 
####então $\frac{dI}{dt}$ < 0

## Simulação 03 - Analisando a propagação com isolamento

### Parâmetros
"""

# Váriaveis de controle
DT = 0.01           # Variação do tempo
t = 0               # Tempo inicial
TMax = 365          # Tempo máximo para simulação (365 Dias)
N = 500             # População total

# Infecção
S = 500             # Poulação Sucetivel
I = 1               # Poupulação Infectada
R = 0               # População Recuperada
r = 0.0004          # Taxa de infecção
a = 0.015           # Taxa de recuperação
infec = 0           # Quantidade máxima de infectados

# Listas para plot
sl = [S]            # Lista Sucetiveis
il = [I]            # Lista Infectados
rl = [R]            # Lista Recuperados
tl = [t]            # Lista Tempo

"""###Cálculos"""

for i in np.arange(DT,TMax,DT):
  DS = (-r*S*I) * DT
  DI = (r*S*I - a*I) * DT
  DR = (a*I) * DT

  S += DS
  I += DI
  R += DR
  
  if (infec < I):
    infec = I

  if (I > 150):
    r = 0.0001

  sl.append(S)
  il.append(I)
  rl.append(R)

  tl.append(t)
  t += DT

"""###Gráficos"""

plt.xlabel("Tempo (dias)")
plt.ylabel("População")
plt.plot
plt.plot(tl,il, label = "Infectados", color = "red")
plt.plot(tl,sl, label = "Sucetiveis", color = "blue")
plt.plot(tl, rl, label = "Recuperados", color = "green")
plt.legend(loc="best")
plt.show()
print("Máximo de Infectados:", round(infec))

"""Assim como na última simulação, nesta há uma desordem no ciclo normal da doença: após o instauração real da epidemia por volta do dia 30, houve um incentivo para que as pessoas ficasse em casa. Assim, houve uma curva menos acetuada na pop. de infectados, pois a taxa de contaminação entre as pessoas se tornou menor. Além disso, percebe-se que a pop. de recuperados também cresce menor, já que os suscetíveis ainda são numerosos por um período maior de tempo (atrasando o processo inteiro).

## Simulação 04 - Analisando a propagação com o descobrimento de um novo fármaco

### Parâmetros
"""

# Váriaveis de controle
DT = 0.01           # Variação do tempo
t = 0               # Tempo inicial
TMax = 365          # Tempo máximo para simulação (365 Dias)
N = 500             # População total

# Infecção
S = 500             # Poulação Sucetivel
I = 1               # Poupulação Infectada
R = 0               # População Recuperada
r = 0.0004          # Taxa de infecção
a = 0.015           # Taxa de recuperação
infec = 0           # Quantidade máxima de infectados

# Listas para plot
sl = [S]            # Lista Sucetiveis
il = [I]            # Lista Infectados
rl = [R]            # Lista Recuperados
tl = [t]            # Lista Tempo

"""###Cálculos"""

for i in np.arange(DT,TMax,DT):
  DS = (-r*S*I) * DT
  DI = (r*S*I - a*I) * DT
  DR = (a*I) * DT

  S += DS
  I += DI
  R += DR
  
  if (infec < I):
    infec = I

  if (I > 200):
    a = 0.025

  sl.append(S)
  il.append(I)
  rl.append(R)

  tl.append(t)
  t += DT

"""###Gráficos

"""

plt.xlabel("Tempo (dias)")
plt.ylabel("População")
plt.plot
plt.plot(tl,il, label = "Infectados", color = "red")
plt.plot(tl,sl, label = "Sucetiveis", color = "blue")
plt.plot(tl, rl, label = "Recuperados", color = "green")
plt.legend(loc="best")
plt.show()
print("Máximo de Infectados:", round(infec))

"""Agora, nesta simulação, há uma outra desordem no ciclo normal da doença: após o instauração real da epidemia por volta do dia 30, os cientistas rapidamente introduziram no mercado um fármaco que acelera a recuperação em 67%. Assim, houve um crescimento normal da doença até o uso geral deste remédio pela pop. de infectados, o que fez acabar rapidamente a epidemia, tal que os próximos infectados também o usarão.

## Simulação 05 - Analisando a propagação com isolamento total e segunda onda

### Parâmetros
"""

# Váriaveis de controle
DT = 0.01           # Variação do tempo
t = 0               # Tempo inicial
TMax = 365          # Tempo máximo para simulação (365 Dias)
N = 500             # População total

# Infecção
S = 500             # Poulação Sucetivel
I = 1               # Poupulação Infectada
R = 0               # População Recuperada
r = 0.00035         # Taxa de infecção
a = 0.015           # Taxa de recuperação
infec = 0           # Quantidade máxima de infectados

# Listas para plot
sl = [S]            # Lista Sucetiveis
il = [I]            # Lista Infectados
rl = [R]            # Lista Recuperados
tl = [t]            # Lista Tempo

"""###Cálculos"""

for i in np.arange(DT,TMax,DT):
  DS = (-r*S*I) * DT
  DI = (r*S*I - a*I) * DT
  DR = (a*I) * DT

  S += DS
  I += DI
  R += DR
  
  if(infec < I):
    infec = I

  if (I > 150 ):
    r = 0

  if (t > 150):
    r = 0.00045
    
  sl.append(S)
  il.append(I)
  rl.append(R)

  tl.append(t)
  t += DT

"""###Gráficos"""

plt.xlabel("Tempo (dias)")
plt.ylabel("População")
plt.plot
plt.plot(tl,il, label = "Infectados", color = "red")
plt.plot(tl,sl, label = "Sucetiveis", color = "blue")
plt.plot(tl, rl, label = "Recuperados", color = "green")
plt.legend(loc="best")
plt.show()
print("Máximo de Infectados:", round(infec))

"""Nesta última simulação, há união de dois conceitos: a paralização total de infecção com um insolamento social extremamente intenso e uma segunda onda com a doença mais forte. Assim, após o instauração real da epidemia por volta do dia 30, houve o isolamento social 100%, assim, não aconteceu um aumento na curva da pop. de infectados, pois a taxa de contaminação entre as pessoas se tornou 0. Após quase 4 meses, com a epidemia quase terminando, teve uma abertura do isolamento social extremo e percebe-se que houve alguma possível mutação da doença e a taxa de infecção cresceu em ~30%, transformando rapidamente o resto dos suscetíveis em infectados. Além disso, a curva dos recuperados deixou de seu estados quase assíntoto para ser uma crescente até sua nova assíntota maior.

## Conclusões do trabalho

Através dos cálculos e simulações realizadas obteve-se um entendimento sobre o funcionamento da propagação de doenças num modelo SIR e como podem ser previstas as situações resultantes de certas ações em relação ao combate com a doença. Quanto aos gráficos, foi analisado em específico cada uma deles.
Por último, as taxas corretas de infecções e recuperações são fundamentais para o bom funcionamento deste modelo, uma vez que se forem muito altas ou baixas, podem causar um resultado absurdo e irreal.
"""